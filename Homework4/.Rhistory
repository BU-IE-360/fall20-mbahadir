install.packages("fpp")
#PS 5
#DECOMPOSITION
getwd()
drug<-read.table("C:/Users/bahad/OneDrive/Masaüstü/Senior/IE 360/PS/PS 5/drug sales.txt", header = F)
drug
#PS 5
#DECOMPOSITION
getwd()
drug<-read.table("C:/Users/bahad/OneDrive/Masaüstü/Senior/IE 360/PS/PS 5/drug sales.txt", header = F)
drug
str(drug)
is.ts(drug)
drugts<-ts(drug,freq=12,start=c(1995,1))
drugts
ts.plot(drugts,xlab = "Year", ylab = "Drug Sales",main="Drug Sales(1995-2008)")
#Time Series Components:
#1-trend 2-seasonality 3-error
#If the components multiply together: multiplicative (the variance increases over time) - Y=trend*seasonality*error
#If the components add together: additive - Y=trend+seasonality+error
drug_dec_multip<-decompose(drugts,type="multiplicative")
drug_dec_multip
plot(drug_dec_multip)
drug_dec_multip$trend
drug_dec_additive<-decompose(drugts,type="additive")
plot(drug_dec_additive)
#variance of the random noise
ts.plot(drugts,xlab = "Year", ylab = "Drug Sales",main="Drug Sales(1995-2008)")
logdrugts<-log(drugts)
ts.plot(logdrugts,xlab = "Year", ylab = "Log(Drug Sales)",main="Log(Drug Sales)(1995-2008)")
#variance seems to be constant now
drugdec<-decompose(logdrugts,type="additive")
drugdec
plot(drugdec)
#variance of the random noise seems to be constant
#since drug_dec_multip is the multiplicative decomposition:
deseasonalized<-drugts/drug_dec_multip$seasonal
ts.plot(drugts)
acf(drugts)
ts.plot(deseasonalized) #there is still trend
acf(deseasonalized)
detrend<-deseasonalized/drug_dec_multip$trend
ts.plot(detrend)
acf(detrend, na.action = na.pass)
#since drug_dec_multip is the multiplicative decomposition:
deseasonalized<-drugts/drug_dec_multip$seasonal
ts.plot(drugts)
acf(drugts)
ts.plot(deseasonalized) #there is still trend
acf(deseasonalized)
detrend<-deseasonalized/drug_dec_multip$trend
ts.plot(detrend)
acf(detrend, na.action = na.pass)
plot(drug_dec_multip$random)
ts.plot(detrend)
drug
str(drug)
ts.plot(drug)
acf(drug)
is.ts(drug)
drugts<-ts(drug,freq=12,start=c(1995,1))
drugts
install.packages("panelaggregation")
library(data.table)
library(lubridate)
library(panelaggregation)
library(dplyr)
library(urca)
library(forecast)
train=fread("GercekZamanliTuketim-01012017-08012021.csv")
test=fread("test-09012021-23012021.csv")
all_dt=rbind(train,test)
setnames(all_dt, "TÃ¼ketim MiktarÄ± (MWh)", "consumption")
setnames(all_dt, "Tarih", "date")
setnames(all_dt, "Saat", "hour")
all_dt$consumption=gsub('\\.', '', all_dt$consumption)
all_dt$consumption=gsub('\\,', '.', all_dt$consumption)
all_dt$hour=gsub(':00', '', all_dt$hour)
all_dt$consumption=as.numeric(all_dt$consumption)
all_dt$hour=as.numeric(all_dt$hour)
all_dt$date=dmy(all_dt$date)
str(all_dt)
dt =all_dt %>%
group_by(date) %>%
summarise(consumption = sum(consumption)
)
dt=as.data.table(dt)
train=filter(dt,date<="2021-01-07")
test=filter(dt,date>"2021-01-07")
ts.plot(train,xlab = "Date", ylab = "Consumption",main="Consumption('2017-01-01' to '2021-01-23')")
unt_test=ur.kpss(train_ts)
train=fread("GercekZamanliTuketim-01012017-08012021.csv")
setwd("C:/Users/bahad/GitHub/IE360/Homework4")
library(data.table)
library(lubridate)
library(panelaggregation)
library(dplyr)
library(urca)
library(forecast)
train=fread("GercekZamanliTuketim-01012017-08012021.csv")
test=fread("test-09012021-23012021.csv")
all_dt=rbind(train,test)
setnames(all_dt, "TÃ¼ketim MiktarÄ± (MWh)", "consumption")
setnames(all_dt, "Tarih", "date")
train=fread("GercekZamanliTuketim-01012017-08012021.csv")
test=fread("test-09012021-23012021.csv")
all_dt=rbind(train,test)
setnames(all_dt, "TÃ¼ketim MiktarÄ± (MWh)", "consumption")
setnames(all_dt, "Tarih", "date")
setnames(all_dt, "Saat", "hour")
all_dt$consumption=gsub('\\.', '', all_dt$consumption)
all_dt$consumption=gsub('\\,', '.', all_dt$consumption)
all_dt$hour=gsub(':00', '', all_dt$hour)
all_dt$consumption=as.numeric(all_dt$consumption)
all_dt$hour=as.numeric(all_dt$hour)
all_dt$date=dmy(all_dt$date)
str(all_dt)
dt =all_dt %>%
group_by(date) %>%
summarise(consumption = sum(consumption)
)
dt=as.data.table(dt)
train=filter(dt,date<="2021-01-07")
test=filter(dt,date>"2021-01-07")
ts.plot(train,xlab = "Date", ylab = "Consumption",main="Consumption('2017-01-01' to '2021-01-23')")
ts.plot(train$consumption,xlab = "Date", ylab = "Consumption",main="Consumption('2017-01-01' to '2021-01-23')")
unt_test=ur.kpss(train_ts)
View(train)
View(dt)
dt =all_dt %>%
group_by(date) %>%
summarise(consumption = sum(consumption)
)
dt=as.data.table(dt)
dt
train=fread("GercekZamanliTuketim-01012017-08012021.csv")
test=fread("test-09012021-23012021.csv")
all_dt=rbind(train,test)
all_dt
View(all_dt)
View(all_dt)
setnames(all_dt, "Tüketim Miktarı (MWh)", "consumption")
setnames(all_dt, "Tarih", "date")
setnames(all_dt, "Saat", "hour")
all_dt$consumption=gsub('\\.', '', all_dt$consumption)
all_dt$consumption=gsub('\\,', '.', all_dt$consumption)
all_dt$hour=gsub(':00', '', all_dt$hour)
all_dt$consumption=as.numeric(all_dt$consumption)
all_dt$hour=as.numeric(all_dt$hour)
all_dt$date=dmy(all_dt$date)
str(all_dt)
dt =all_dt %>%
group_by(date) %>%
summarise(consumption = sum(consumption)
)
dt=as.data.table(dt)
dt
train=filter(dt,date<="2021-01-07")
test=filter(dt,date>"2021-01-07")
ts.plot(train,xlab = "Date", ylab = "Consumption",main="Consumption('2017-01-01' to '2021-01-23')")
unt_test=ur.kpss(train_ts)
train_ts=ts(train$consumption,freq=7)
test_ts=ts(test$consumption,freq=7)
ts.plot(train,xlab = "Date", ylab = "Consumption",main="Consumption('2017-01-01' to '2021-01-23')")
unt_test=ur.kpss(train_ts)
summary(unt_test)
consumption_decom=decompose(train_ts,type='add')
plot(consumption_decom)
unt_test_decomp=ur.kpss(consumption_decom$random)
summary(unt_test_decomp)
train[,lag_7:=shift(consumption,7)]
train[,differ:=consumption-lag_7]
unt_test_differ=ur.kpss(train$differ)
summary(unt_test_differ)
train_ts=ts(train$consumption,start=1,end=1468,freq=7)
train_ts
summary(unt_test_differ)
unt_test_differ=ur.kpss(train$differ)
train[,differ:=consumption-lag_7]
# plot(consumption_decom$random)
str(train)
dt=as.data.table(dt)
train=filter(dt,date<="2021-01-07")
test=filter(dt,date>"2021-01-07")
# plot(consumption_decom$random)
str(train)
train[,lag_7:=shift(consumption,7)]
# plot(consumption_decom$random)
str(dt)
# plot(consumption_decom$random)
train=as.data.table(train)
train[,lag_7:=shift(consumption,7)]
train[,differ:=consumption-lag_7]
unt_test_differ=ur.kpss(train$differ)
summary(unt_test_differ)
train_ts=ts(train$consumption,start=1,end=1468,freq=7)
train_ts
msts_cons<-msts(ts(train$consumption, frequency = 7), seasonal.periods = c(91,365))
msts_cons<-msts(ts(train$consumption, frequency = 7), seasonal.periods = c(91,365))
plot(msts_cons)
msts_cons
ts(train$consumption, frequency = 7)
train_ts=ts(train$consumption,freq=7)
train_ts
msts_cons<-msts(train_ts, seasonal.periods = c(91,365))
plot(msts_cons)
msts_cons<-msts(train_ts, seasonal.periods = c(7,365))
msts_cons<-msts(train_ts, seasonal.periods = c(7,7*52))
plot(msts_cons)
